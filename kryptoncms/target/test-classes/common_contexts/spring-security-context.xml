<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
           http://www.springframework.org/schema/jdbc
           http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security-3.1.xsd
           http://www.springframework.org/schema/context 
           http://www.springframework.org/schema/context/spring-context-3.1.xsd">

	<http auto-config="false" use-expressions="true"
		entry-point-ref="loginUrlAuthenticationEntryPoint">
		<intercept-url pattern="/" access="permitAll" />
		<intercept-url pattern="/membership/login" access="permitAll" />
		<intercept-url pattern="/membership/register" access="permitAll" />
		<intercept-url pattern="/membership/register/**" access="permitAll" />
		<intercept-url pattern="/comments/**" access="isAuthenticated()" />
		<intercept-url pattern="/chat/**" access="isAuthenticated()" />
		<intercept-url pattern="/resources/**" access="permitAll" />
		<access-denied-handler error-page="/denied" />
		<logout invalidate-session="true"  logout-success-url="/membership/logout/success"
			logout-url="/membership/logout" delete-cookies="JSESSIONID" />

		<custom-filter ref="authenticationFilter" position="FORM_LOGIN_FILTER" />
	</http>
	<beans:bean id="loginUrlAuthenticationEntryPoint"
		class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
		<beans:property name="loginFormUrl" value="/error/401" />
	</beans:bean>

	<beans:bean id="authenticationFilter"
		class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter">
		<beans:property name="authenticationManager" ref="authenticationManager" />
		<beans:property name="filterProcessesUrl" value="/j_spring_security_check" />
		<beans:property name="authenticationFailureHandler"
			ref="securityLoginFailureHandler" />
		<beans:property name="authenticationSuccessHandler"
			ref="securityLoginSuccessHandler" />
	</beans:bean>

	<beans:bean id="securityLoginSuccessHandler"
		class="edu.asu.krypton.service.security.SecurityLoginSuccessHandler">
		<beans:property name="defaultTargetUrl" value="/membership/login/success" />
	</beans:bean>

	<beans:bean id="securityLoginFailureHandler"
		class="edu.asu.krypton.service.security.SecurityLoginFailureHandler">
		<beans:property name="defaultFailureUrl" value="/membership/login/failure" />
	</beans:bean>


	<!-- the hash salt can be anything but never 
		1 - change the salt after deployment 
		2 - let it be public -->
	<beans:bean class="java.lang.String" id="hashSalt">
		<beans:constructor-arg type="java.lang.String">
			<beans:value>
				e99c9384694b3239059351543e0f737fcdb87b06
			</beans:value>
		</beans:constructor-arg>
	</beans:bean>
	
	<beans:bean id="textEncryptor" class="org.springframework.security.crypto.encrypt.Encryptors"
		factory-method="noOpText" />
		
	<beans:bean id="passwordEncoder" class="org.springframework.security.crypto.password.NoOpPasswordEncoder"
		factory-method="getInstance" />
		
	<beans:bean class="org.springframework.security.authentication.encoding.ShaPasswordEncoder"
		id="shaPasswordEncoder" />
		
	<authentication-manager alias="authenticationManager">
		<authentication-provider user-service-ref="customUserDetailsService" >
			<password-encoder ref="shaPasswordEncoder">
				<salt-source system-wide="#{hashSalt}" />
			</password-encoder>
		</authentication-provider>
	</authentication-manager>

<!-- 	<beans:bean id="userCache" -->
<!-- 		class="org.springframework.security.core.userdetails.cache.EhCacheBasedUserCache"> -->
<!-- 		<beans:property name="cache" ref="userEhCache" /> -->
<!-- 	</beans:bean> -->
<!-- 	<beans:bean id="userEhCache" -->
<!-- 		class="org.springframework.cache.ehcache.EhCacheFactoryBean"> -->
<!-- 		<beans:property name="cacheManager" ref="cacheManager" /> -->
<!-- 		<beans:property name="cacheName" value="userCache" /> -->
<!-- 	</beans:bean> -->
<!-- 	<beans:bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean" /> -->
	
</beans:beans>
