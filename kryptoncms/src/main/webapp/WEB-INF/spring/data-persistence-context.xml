<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
             xmlns:cloud="http://schema.cloudfoundry.org/spring"
             xmlns:mongo="http://www.springframework.org/schema/data/mongo"
             xmlns:redis="http://www.springframework.org/schema/redis"
             xmlns:c="http://www.springframework.org/schema/c"
             xmlns:tx="http://www.springframework.org/schema/tx"
             xmlns:p="http://www.springframework.org/schema/p"
             xmlns:util="http://www.springframework.org/schema/util"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:jdbc="http://www.springframework.org/schema/jdbc"
             xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
             http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd
			 http://schema.cloudfoundry.org/spring http://schema.cloudfoundry.org/spring/cloudfoundry-spring-0.6.xsd
             http://www.springframework.org/schema/data/mongo http://www.springframework.org/schema/data/mongo/spring-mongo-1.0.xsd
             http://www.springframework.org/schema/redis http://www.springframework.org/schema/redis/spring-redis.xsd
             http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.0.xsd
             http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">
  

<bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
		<constructor-arg name="mongoDbFactory" ref="mongoDbFactory"/>
<!-- 			<constructor-arg ref="mongo" /> -->
<!-- 		  	<constructor-arg name="databaseName" value="kryptoncms" /> -->
	</bean>

	<mongo:db-factory host="localhost" port="27017" dbname="kryptoncms"/>
	
	
<!-- 	<mongo:mongo replica-set="localhost:27017,localhost:26061,localhost:26062,localhost:26063"> -->
<!--   		<mongo:options -->
<!--     	 connections-per-host="10" -->
<!--     	 auto-connect-retry="true" -->
<!--     	 threads-allowed-to-block-for-connection-multiplier="5" -->
<!--     	 connect-timeout="1000" -->
<!--     	 max-wait-time="5000" -->
<!--     	 slave-ok="true" -->
<!--     	 write-number="2" -->
<!--     	 write-timeout="0" -->
<!--     	 write-fsync="true"/> -->
<!-- 	</mongo:mongo> -->


  <bean id="redisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory" />
  <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate" >
  	<property name="connectionFactory" ref="redisConnectionFactory" />
  	<property name="keySerializer">
  		<bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
  	</property>
  	<property name="hashValueSerializer" >
  		<bean class="org.springframework.data.redis.serializer.GenericToStringSerializer" >
  			<constructor-arg value="#{new Object().getClass()}"/> 
  		</bean>
  	</property>
  	<property name="valueSerializer" > 
  		<bean class="org.springframework.data.redis.serializer.GenericToStringSerializer" >
  			<constructor-arg value="#{new Object().getClass()}" />
  		</bean>
  	</property>
  </bean>
  <redis:listener-container>
    <redis:listener ref="chatListener"     method="onMessage" topic="chatMessageBroadcast"/>
    <redis:listener ref="commentListener"  method="onMessage" topic="commentMessageBroadcast"/>
    <redis:listener ref="menuListener"     method="onMessage" topic="menuMessageBroadcast"/>
    <redis:listener ref="scaffoldListener" method="onMessage" topic="scaffoldMessageBroadcast"/>    
  </redis:listener-container>  
  <bean id="chatListener" class="edu.asu.krypton.service.redis.listeners.ChatListener"/>
  <bean id="commentListener" class="edu.asu.krypton.service.redis.listeners.CommentListener"/>
  <bean id="menuListener" class="edu.asu.krypton.service.redis.listeners.MenuListener"/>
  <bean id="scaffoldListener" class="edu.asu.krypton.service.redis.listeners.ScaffoldListener"/>
  <bean class="org.codehaus.jackson.map.ObjectMapper" />
    <bean id = "jaxbMarshaller" class = "org.springframework.oxm.jaxb.Jaxb2Marshaller">
        <property name = "classesToBeBound">
            <array>
                <value>edu.asu.krypton.model.persist.db.User</value>
                <value>edu.asu.krypton.model.persist.db.Article</value>
                <value>edu.asu.krypton.model.persist.db.Comment</value>
                <value>edu.asu.krypton.model.message_proxies.QueryMessage</value>
                <value>edu.asu.krypton.model.persist.db.Album</value>
                <value>edu.asu.krypton.model.persist.db.Photo</value>
                <value>edu.asu.krypton.model.persist.db.PhotoComment</value>
            </array>
        </property>
    </bean>
	<beans profile="default">
		<util:properties id="serviceProperties">
			<prop key="kryptoncms.db">localhost:3306/krypton</prop>
			<prop key="kryptoncms.username">root</prop>
			<prop key="kryptoncms.password">root</prop>
		</util:properties>
	</beans>
</beans>
